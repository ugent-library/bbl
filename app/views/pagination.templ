package views

import (
	"fmt"
	"github.com/ugent-library/bbl/pagination"
	"net/url"
)

templ Pagination(u *url.URL, pager *pagination.Pager) {
	<ul class="pagination">
		if pager.HasPrevPage {
			<li class="page-item">
				<a class="page-link" href={ templ.SafeURL(withFrom(u, pager.PrevPage.Offset).String()) } aria-label="Previous">
					<i class="if if-chevron-left" aria-hidden="true"></i>
				</a>
			</li>
		} else {
			<li class="page-item disabled">
				<a class="page-link" href="#" aria-label="Previous">
					<i class="if if-chevron-left" aria-hidden="true"></i>
				</a>
			</li>
		}
		for _, p := range pager.Pages {
			<li class={ "page-item", templ.KV("active", p.Current) }>
				<a class="page-link" href={ templ.SafeURL(withFrom(u, p.Offset).String()) }>{ fmt.Sprint(p.Number) }</a>
			</li>
		}
		if pager.HasNextPage {
			<li class="page-item">
				<a class="page-link" href={ templ.SafeURL(withFrom(u, pager.NextPage.Offset).String()) } aria-label="Next">
					<i class="if if-chevron-right" aria-hidden="true"></i>
				</a>
			</li>
		} else {
			<li class="page-item disabled">
				<a class="page-link" href="#" aria-label="Next">
					<i class="if if-chevron-right" aria-hidden="true"></i>
				</a>
			</li>
		}
	</ul>
}

func withFrom(u *url.URL, from int) *url.URL {
    q := u.Query()
    q.Set("from", fmt.Sprint(from))
    newU := *u
    newU.RawQuery = q.Encode()
    return &newU
}