package views

import "time"

const (
	FlashSuccess = "success"
	FlashInfo    = "info"
	FlashWarning = "warning"
	FlashError   = "error"
)

type FlashArgs struct {
	Type         string
	Title        string
	Text         string
	HTML         string
	DismissAfter time.Duration
}

templ AddFlash(f FlashArgs) {
	<div hx-swap-oob="beforeend:#flashes">
		@Flash(f)
	</div>
}

// TODO dismiss after doesn't work
templ Flash(f FlashArgs) {
	<div
		class="toast show"
		role="alert"
		aria-live="assertive"
		aria-atomic="true"
		if f.DismissAfter != 0 {
			data-bs-delay={ f.DismissAfter.Milliseconds() }
		} else {
			data-bs-autohide="false"
		}
	>
		<div class="toast-body">
			switch f.Type {
				case FlashSuccess:
					<i class="if if--success if-check-circle-fill"></i>
				case FlashInfo:
					<i class="if if--primary if-info-circle-filled"></i>
				case FlashWarning:
					<i class="if if--warning if-alert-fill"></i>
				case FlashError:
					<i class="if if--error if-error-circle-fill"></i>
			}
			<div class="toast-content">
				if f.Title != "" {
					<h3 class="alert-title">{ f.Title }</h3>
				}
				if f.HTML != "" {
					@templ.Raw(f.HTML)
				} else if f.Text != "" {
					{ f.Text }
				}
			</div>
			<button class="btn-close" type="button" aria-label="Close" data-bs-dismiss="toast">
				<i class="if if-close"></i>
			</button>
		</div>
	</div>
}
